{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "windowsVMUsername": {
      "type": "string"
    },
    "windowsVMPassword": {
      "type": "secureString"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "vnet"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "vnet"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "location": "[resourceGroup().location]",
              "name": "[parameters('name')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "10.0.1.0/27",
                      "networkSecurityGroup": {
                        "id": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'nsgBastion'), '2019-10-01').outputs.nsgId.value]"
                      }
                    }
                  },
                  {
                    "name": "datalake",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "databricks-public",
                    "properties": {
                      "addressPrefix": "10.0.3.0/24",
                      "networkSecurityGroup": {
                        "id": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'nsgDatabricks'), '2019-10-01').outputs.publicNsgId.value]"
                      },
                      "delegations": [
                        {
                          "name": "databricks-delegation-public",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "databricks-private",
                    "properties": {
                      "addressPrefix": "10.0.4.0/24",
                      "networkSecurityGroup": {
                        "id": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'nsgDatabricks'), '2019-10-01').outputs.privateNsgId.value]"
                      },
                      "delegations": [
                        {
                          "name": "databricks-delegation-private",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "compute",
                    "properties": {
                      "addressPrefix": "10.0.10.0/24",
                      "networkSecurityGroup": {
                        "id": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'nsgCompute'), '2019-10-01').outputs.nsgId.value]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'nsgBastion')]",
                "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'nsgCompute')]",
                "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'nsgDatabricks')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "nsgCompute",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "nsg-compute"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[resourceGroup().location]"
                    }
                  ],
                  "outputs": {
                    "nsgId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "nsgBastion",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "nsg-bastion"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[resourceGroup().location]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowHttpsInbound",
                            "properties": {
                              "priority": 120,
                              "direction": "Inbound",
                              "access": "Allow",
                              "protocol": "Tcp",
                              "sourceAddressPrefix": "Internet",
                              "sourcePortRange": "*",
                              "destinationAddressPrefix": "*",
                              "destinationPortRange": "443"
                            }
                          },
                          {
                            "name": "AllowGatewayManagerInbound",
                            "properties": {
                              "priority": 130,
                              "direction": "Inbound",
                              "access": "Allow",
                              "protocol": "Tcp",
                              "sourceAddressPrefix": "GatewayManager",
                              "sourcePortRange": "*",
                              "destinationAddressPrefix": "*",
                              "destinationPortRange": "443"
                            }
                          },
                          {
                            "name": "AllowSshRdpOutbound",
                            "properties": {
                              "priority": 100,
                              "direction": "Outbound",
                              "access": "Allow",
                              "protocol": "*",
                              "sourceAddressPrefix": "*",
                              "sourcePortRange": "*",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "destinationPortRanges": [
                                "22",
                                "3389"
                              ]
                            }
                          },
                          {
                            "name": "AllowAzureCloudOutbound",
                            "properties": {
                              "priority": 110,
                              "direction": "Outbound",
                              "access": "Allow",
                              "protocol": "Tcp",
                              "sourceAddressPrefix": "*",
                              "sourcePortRange": "*",
                              "destinationAddressPrefix": "AzureCloud",
                              "destinationPortRange": "443"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "nsgId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "nsgDatabricks",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "namePublic": {
                    "value": "nsg-databricks-public"
                  },
                  "namePrivate": {
                    "value": "nsg-databricks-private"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "namePublic": {
                      "type": "string"
                    },
                    "namePrivate": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('namePublic')]",
                      "location": "[resourceGroup().location]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-worker-inbound",
                            "properties": {
                              "description": "Required for worker nodes communication within a cluster.",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-databricks-webapp",
                            "properties": {
                              "description": "Required for workers communication with Databricks Webapp.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "AzureDatabricks",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-sql",
                            "properties": {
                              "description": "Required for workers communication with Azure SQL services.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "3306",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "Sql",
                              "access": "Allow",
                              "priority": 101,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-storage",
                            "properties": {
                              "description": "Required for workers communication with Azure Storage services.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "Storage",
                              "access": "Allow",
                              "priority": 102,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-worker-outbound",
                            "properties": {
                              "description": "Required for worker nodes communication within a cluster.",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 103,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-eventhub",
                            "properties": {
                              "description": "Required for worker communication with Azure Eventhub services.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "9093",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "EventHub",
                              "access": "Allow",
                              "priority": 104,
                              "direction": "Outbound"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('namePrivate')]",
                      "location": "[resourceGroup().location]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-worker-inbound",
                            "properties": {
                              "description": "Required for worker nodes communication within a cluster.",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-databricks-webapp",
                            "properties": {
                              "description": "Required for workers communication with Databricks Webapp.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "AzureDatabricks",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-sql",
                            "properties": {
                              "description": "Required for workers communication with Azure SQL services.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "3306",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "Sql",
                              "access": "Allow",
                              "priority": 101,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-storage",
                            "properties": {
                              "description": "Required for workers communication with Azure Storage services.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "Storage",
                              "access": "Allow",
                              "priority": 102,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-worker-outbound",
                            "properties": {
                              "description": "Required for worker nodes communication within a cluster.",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 103,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-eventhub",
                            "properties": {
                              "description": "Required for worker communication with Azure Eventhub services.",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "9093",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "EventHub",
                              "access": "Allow",
                              "priority": 104,
                              "direction": "Outbound"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "publicNsgId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('namePublic'))]"
                    },
                    "privateNsgId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('namePrivate'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datalake_blob_private_zone",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "zone": {
                    "value": "privatelink.blob.core.windows.net"
                  },
                  "vnetId": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "zone": {
                      "type": "string"
                    },
                    "vnetId": {
                      "type": "string"
                    },
                    "registrationEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2018-09-01",
                      "name": "[parameters('zone')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2018-09-01",
                      "name": "[format('{0}/{1}', parameters('zone'), uniqueString(parameters('vnetId')))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        },
                        "registrationEnabled": "[parameters('registrationEnabled')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zone'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zone'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datalake_dfs_private_zone",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "zone": {
                    "value": "privatelink.dfs.core.windows.net"
                  },
                  "vnetId": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "zone": {
                      "type": "string"
                    },
                    "vnetId": {
                      "type": "string"
                    },
                    "registrationEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2018-09-01",
                      "name": "[parameters('zone')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2018-09-01",
                      "name": "[format('{0}/{1}', parameters('zone'), uniqueString(parameters('vnetId')))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        },
                        "registrationEnabled": "[parameters('registrationEnabled')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zone'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zone'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
            },
            "dataLakeSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/datalake', resourceId('Microsoft.Network/virtualNetworks', parameters('name')))]"
            },
            "computeSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/compute', resourceId('Microsoft.Network/virtualNetworks', parameters('name')))]"
            },
            "bastionSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/AzureBastionSubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('name')))]"
            },
            "databricksPublicSubnetName": {
              "type": "string",
              "value": "databricks-public"
            },
            "databricksPrivateSubnetName": {
              "type": "string",
              "value": "databricks-private"
            },
            "dataLakeBlobPrivateZoneId": {
              "type": "string",
              "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'datalake_blob_private_zone'), '2019-10-01').outputs.privateZoneId.value]"
            },
            "dataLakeDfsPrivateZoneId": {
              "type": "string",
              "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'datalake_dfs_private_zone'), '2019-10-01').outputs.privateZoneId.value]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "egressLb",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "egressLb"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "loadBalancerBackendPoolName": "lbBackendPool",
            "loadBalancerBackendPoolId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('name'), variables('loadBalancerBackendPoolName'))]",
            "loadBalancerFrontendConfigName": "frontendConfig",
            "loadBalancerFrontendConfigId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('name'), variables('loadBalancerFrontendConfigName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-publicip', parameters('name'))]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2020-06-01",
              "name": "[parameters('name')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "[variables('loadBalancerFrontendConfigName')]",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', parameters('name')))]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "[variables('loadBalancerBackendPoolName')]"
                  }
                ],
                "outboundRules": [
                  {
                    "name": "databricks-outbound-rule",
                    "properties": {
                      "allocatedOutboundPorts": 0,
                      "protocol": "All",
                      "enableTcpReset": true,
                      "idleTimeoutInMinutes": 4,
                      "backendAddressPool": {
                        "id": "[variables('loadBalancerBackendPoolId')]"
                      },
                      "frontendIPConfigurations": [
                        {
                          "id": "[variables('loadBalancerFrontendConfigId')]"
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "lbId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/loadBalancers', parameters('name'))]"
            },
            "lbBackendPoolName": {
              "type": "string",
              "value": "[variables('loadBalancerBackendPoolName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "bastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastionName": {
            "value": "bastion"
          },
          "bastionSubnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.bastionSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "bastionName": {
              "type": "string",
              "defaultValue": "bastion"
            },
            "bastionSubnetId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "location": "[resourceGroup().location]",
              "name": "[format('{0}-publicip', parameters('bastionName'))]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2020-06-01",
              "location": "[resourceGroup().location]",
              "name": "[parameters('bastionName')]",
              "properties": {
                "dnsName": "[uniqueString(resourceGroup().id)]",
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('bastionSubnetId')]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', parameters('bastionName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', parameters('bastionName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "datalake",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "datalake"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.dataLakeSubnetId.value]"
          },
          "blobPrivateZoneId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.dataLakeBlobPrivateZoneId.value]"
          },
          "dfsPrivateZoneId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.dataLakeDfsPrivateZoneId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "blobPrivateZoneId": {
              "type": "string"
            },
            "dfsPrivateZoneId": {
              "type": "string"
            },
            "namePrefix": {
              "type": "string",
              "defaultValue": "datalake"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "location": "[resourceGroup().location]",
              "name": "[format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id))]",
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_GRS"
              },
              "properties": {
                "accessTier": "Hot",
                "isHnsEnabled": true,
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "Logging,Metrics"
                }
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2020-06-01",
              "location": "[resourceGroup().location]",
              "name": "[format('{0}-blob-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-blob-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2020-06-01",
              "location": "[resourceGroup().location]",
              "name": "[format('{0}-dfs-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-dfs-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]",
                      "groupIds": [
                        "dfs"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/default', format('{0}-blob-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id))))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink_blob_core_windows_net",
                    "properties": {
                      "privateDnsZoneId": "[parameters('blobPrivateZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-blob-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id))))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/default', format('{0}-dfs-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id))))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink_dfs_core_windows_net",
                    "properties": {
                      "privateDnsZoneId": "[parameters('dfsPrivateZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-dfs-endpoint', format('{0}{1}', parameters('namePrefix'), uniqueString(resourceGroup().id))))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "databricks",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "databricks"
          },
          "vnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.vnetId.value]"
          },
          "pricingTier": {
            "value": "premium"
          },
          "managedResourceGroupId": {
            "value": "[format('{0}/resourceGroups/databricks-rg-{1}-{2}', subscription().id, resourceGroup().name, uniqueString(resourceGroup().id))]"
          },
          "publicSubnetName": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.databricksPublicSubnetName.value]"
          },
          "privateSubnetName": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.databricksPrivateSubnetName.value]"
          },
          "loadbalancerId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'egressLb'), '2019-10-01').outputs.lbId.value]"
          },
          "loadBalancerBackendPoolName": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'egressLb'), '2019-10-01').outputs.lbBackendPoolName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string"
            },
            "pricingTier": {
              "type": "string",
              "allowedValues": [
                "trial",
                "standard",
                "premium"
              ]
            },
            "vnetId": {
              "type": "string"
            },
            "publicSubnetName": {
              "type": "string"
            },
            "privateSubnetName": {
              "type": "string"
            },
            "loadbalancerId": {
              "type": "string"
            },
            "loadBalancerBackendPoolName": {
              "type": "string"
            },
            "managedResourceGroupId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Databricks/workspaces",
              "apiVersion": "2018-04-01",
              "name": "[parameters('name')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "[parameters('pricingTier')]"
              },
              "properties": {
                "managedResourceGroupId": "[parameters('managedResourceGroupId')]",
                "parameters": {
                  "customVirtualNetworkId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "customPrivateSubnetName": {
                    "value": "[parameters('privateSubnetName')]"
                  },
                  "customPublicSubnetName": {
                    "value": "[parameters('publicSubnetName')]"
                  },
                  "enableNoPublicIp": {
                    "value": true
                  },
                  "loadBalancerId": {
                    "value": "[parameters('loadbalancerId')]"
                  },
                  "loadBalancerBackendPoolName": {
                    "value": "[parameters('loadBalancerBackendPoolName')]"
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'egressLb')]",
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "testvm",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "enableAcceleratedNetworking": {
            "value": true
          },
          "vmName": {
            "value": "data1-win2019"
          },
          "vmSize": {
            "value": "Standard_DS2_v2"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.computeSubnetId.value]"
          },
          "zone": {
            "value": "1"
          },
          "username": {
            "value": "[parameters('windowsVMUsername')]"
          },
          "password": {
            "value": "[parameters('windowsVMPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "subnetId": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "password": {
              "type": "secureString"
            },
            "zone": {
              "type": "string"
            },
            "enableAcceleratedNetworking": {
              "type": "bool"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "privateIPAddressVersion": "IPv4",
                      "primary": true
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2020-06-01",
              "name": "[parameters('vmName')]",
              "location": "[resourceGroup().location]",
              "zones": [
                "[parameters('zone')]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2019-Datacenter",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-os', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  },
                  "dataDisks": [
                    {
                      "caching": "None",
                      "name": "[format('{0}-data-1', parameters('vmName'))]",
                      "diskSizeGB": 128,
                      "lun": 0,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      },
                      "createOption": "Empty"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('username')]",
                  "adminPassword": "[parameters('password')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            }
          ],
          "outputs": {
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "nicId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'vnet')]"
      ]
    }
  ]
}